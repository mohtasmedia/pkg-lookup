#!/usr/bin/env node
"use strict";const e=require("https"),[o]=process.argv.slice(2),s={r:"[0m",y:"[33m",d:"[2m"},t=([o,s])=>new Promise((t,a)=>{e.get({hostname:o,path:s,headers:{"User-Agent":""}},e=>{const o=[];e.on("data",e=>o.push(e)),e.on("end",()=>t(JSON.parse(Buffer.concat(o)))),e.on("error",e=>a(e))})}).catch(e=>console.error(e)),a=(e,o)=>""+(s[o]+e+s.r),n=e=>a(e,"y")+": ",i=e=>e>=1024?(e/1024).toFixed(1)+"KB":e+"B",r=e=>console.log(e?"    "+e:"");(async()=>{const e=await t(["api.npms.io","/v2/package/"+encodeURIComponent(o)]);if(e.code)return r(e.message);const{collected:{metadata:s,github:p,npm:c}}=e,l=await t(["bundlephobia.com","/api/size?package="+o]),d=s.links.repository.split("/"),{total_count:g}=await t(["api.github.com",`/search/issues?q=repo:${d[3]}/${d[4]}+is:pr+state:open&per_page=1`]);var u;r(),r(`${s.name} - v${s.version} (Published ${u=new Date(s.date),`${u.getDate()}/${u.getMonth()+1}/${u.getFullYear()}`})`),r(a(s.description,"d")),r(),r(`${n("Size / Gzipped")+i(l.size)} / ${i(l.gzip)}`),r(""+(n("Downloads")+c.downloads[c.downloads.length-1].count.toLocaleString())),r(`${n("Open issues / PRs")+p.issues.openCount} / ${g}`),r(""+(n("Github Stars")+p.starsCount.toLocaleString())),r(),r(""+(n("NPM")+s.links.npm)),r(""+(n("Homepage")+s.links.homepage)),r(""+(n("Repo")+s.links.repository)),r(),r(""+(n("Liscnce")+s.license))})();
